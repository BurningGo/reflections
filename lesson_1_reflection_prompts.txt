How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It allows to trace changes of particular codes. A programmer does not need to search entire code blocks to find out bugs, but he can focus on the changed part of the code to find out what went wrong.  New bug is usually generated at codes which have been modified.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    it simply does.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros - The commint can be carried out to each logical block.
    Cons - The changes of the document should be traced by the programmer.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In many cases, source code in different files are interrelated to each other.

How can you use the commands git log and git diff to view the history of files?

    The command of 'git log' shows the history of file changes. By using 'git log', a programmer can search note related to each change.
    Each change is associated with an ID. Specific part of change can be identified by calling 'git diff' with both IDs of commitment as parameters.
    
How might using version control make you more confident to make changes that
could break something?

    You can always roll back the state of codes by using the command of "git checkout"

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
